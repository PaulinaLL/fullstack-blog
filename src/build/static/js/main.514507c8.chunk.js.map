{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","className","articles","name","title","content","ArticlesList","map","article","key","to","substring","ArticlesListPage","articleContent","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","App","id","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.514507c8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <h1>Welcome to my blog!</h1>\n      <p>\n        {\" \"}\n        Id non provident dolorem excepturi. Eligendi explicabo ut accusantium.\n        Reiciendis officia a id voluptas. Atque rerum ut id tempora consectetur.\n        Ex velit sint quam occaecati voluptatum dolorum recusandae. Est debitis\n        aut et dolore.…\n      </p>\n      <p>\n        {\" \"}\n        Id non provident dolorem excepturi. Eligendi explicabo ut accusantium.\n        Reiciendis officia a id voluptas. Atque rerum ut id tempora consectetur.\n        Ex velit sint quam occaecati voluptatum dolorum recusandae. Est debitis\n        aut et dolore.…\n      </p>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\n\nconst AboutPage = () => {\n  return (\n    <>\n      <h1>About me </h1>\n      <p className=\"about-text\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum.\n      </p>\n    </>\n  );\n};\n\nexport default AboutPage;\n","const articles = [\n  {\n    name: \"learn-to-code\",\n    title: \"keep learning!\",\n    content: [\n      `tutorials Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum`,\n      `projects Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae suscipit tellus mauris a diam maecenas sed. Tristique magna sit amet purus gravida quis blandit turpis cursus. Risus feugiat in ante metus dictum. Nullam vehicula ipsum a arcu cursus vitae. Pellentesque habitant morbi tristique senectus. Dictum fusce ut placerat orci nulla pellentesque dignissim. Nisl condimentum id venenatis a. Rhoncus mattis rhoncus urna neque viverra justo nec ultrices. Non curabitur gravida arcu ac tortor dignissim convallis. Nec dui nunc mattis enim ut. Nulla aliquet enim tortor at. Eu non diam phasellus vestibulum lorem sed risus ultricies. Et netus et malesuada fames ac turpis egestas maecenas. Varius sit amet mattis vulputate enim nulla aliquet porttitor lacus. Ultricies integer quis auctor elit sed vulputate mi sit.`,\n    ],\n  },\n  {\n    name: \"get-the-first-IT-job\",\n    title: \"first IT job\",\n    content: [\n      `steps Metus dictum at tempor commodo. Nunc sed velit dignissim sodales ut eu sem. Aliquam etiam erat velit scelerisque in dictum. Ac ut consequat semper viverra nam libero justo. Ornare arcu dui vivamus arcu felis bibendum ut. Fames ac turpis egestas integer eget aliquet nibh praesent. Nam libero justo laoreet sit. Velit sed ullamcorper morbi tincidunt ornare massa. Euismod in pellentesque massa placerat duis ultricies. Nunc faucibus a pellentesque sit amet porttitor eget dolor. Felis bibendum ut tristique et egestas quis ipsum suspendisse ultrices. Volutpat lacus laoreet non curabitur gravida. Purus in massa tempor nec feugiat nisl pretium fusce id. Odio ut sem nulla pharetra diam. Eleifend mi in nulla posuere sollicitudin. Quam id leo in vitae turpis. Varius morbi enim nunc faucibus. Convallis tellus id interdum velit laoreet id donec ultrices.`,\n      `portfolio Adipiscing enim eu turpis egestas. Libero enim sed faucibus turpis in eu. Id semper risus in hendrerit gravida rutrum. Justo nec ultrices dui sapien eget mi. Sapien eget mi proin sed libero enim. Fermentum posuere urna nec tincidunt praesent semper feugiat nibh.`,\n    ],\n  },\n  {\n    name: \"how-to-start-painting\",\n    title: \"painting\",\n    content: [\n      `colors Sit amet nulla facilisi morbi. Ornare arcu odio ut sem nulla pharetra diam sit amet. Et tortor at risus viverra adipiscing at in. Porttitor massa id neque aliquam vestibulum morbi blandit.`,\n      `forms Aliquet nec ullamcorper sit amet. Nulla pellentesque dignissim enim sit amet venenatis urna. Ut consequat semper viverra nam libero. Tristique senectus et netus et malesuada. Et tortor consequat id porta. Pharetra vel turpis nunc eget lorem dolor sed viverra ipsum. Proin libero nunc consequat interdum. `,\n    ],\n  },\n];\n\nexport default articles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ArticlesList = ({ articles }) => {\n  return (\n    <>\n      {articles.map((article, key) => (\n        <Link\n          key={key}\n          to={`/article/${article.name}`}\n          className=\"articles-in-list\"\n        >\n          <h3>{article.title}</h3>\n          <p>{article.content[0].substring(0, 150)}...</p>\n        </Link>\n      ))}\n    </>\n  );\n};\n\nexport default ArticlesList;\n","import React from \"react\";\nimport articleContent from \"./article-content\";\nimport ArticlesList from \"../components/ArticlesList\";\n\nconst ArticlesListPage = () => {\n  return (\n    <>\n      <h1>Articles</h1>\n      <ArticlesList articles={articleContent} />\n    </>\n  );\n};\n\nexport default ArticlesListPage;\n","import React from \"react\";\n\nconst NotFoundPage = () => {\n  return (\n    <>\n      <h1>404: Page not found</h1>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nconst CommentsList = ({ comments }) => {\n  return (\n    <>\n      <h3>Comments:</h3>\n      {comments.map((comment, key) => (\n        <div key={key} className=\"comment\">\n          <h4>{comment.username}</h4>\n          <p>{comment.text}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default CommentsList;\n","import React from \"react\";\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n  const upvoteArticle = async () => {\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: \"POST\",\n    });\n\n    const body = await result.json();\n    setArticleInfo(body);\n  };\n  return (\n    <>\n      <button onClick={upvoteArticle}>Add upvote</button>\n      <p>This post has been upvoted: {upvotes} times.</p>\n    </>\n  );\n};\n\nexport default UpvotesSection;\n","import React, { useState } from \"react\";\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n  const [username, setUsername] = useState(\"\");\n  const [commentText, setCommentText] = useState(\"\");\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: \"POST\",\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n    setUsername(\"\");\n    setCommentText(\"\");\n  };\n\n  return (\n    <form>\n      <h3>Add a Comment</h3>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n      </label>\n      <label>\n        Comment:\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={commentText}\n          onChange={(event) => setCommentText(event.target.value)}\n        />\n      </label>\n\n      <button onClick={() => addComment()}>Add Comment</button>\n    </form>\n  );\n};\n\nexport default AddCommentForm;\n","import React, { useState, useEffect } from \"react\";\nimport ArticlesList from \"../components/ArticlesList\";\nimport articleContent from \"./article-content\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport CommentsList from \"../components/CommentsList\";\nimport UpvotesSection from \"../components/UpvotesSection\";\nimport AddCommentForm from \"../components/AddCommentForm\";\n\nconst ArticlePage = ({ match }) => {\n  const name = match.params.name;\n  const article = articleContent.find((article) => article.name === name);\n\n  // connecting with backend with hooks\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      setArticleInfo(body);\n    };\n    fetchData();\n  }, [name]);\n\n  if (!article) return <NotFoundPage />;\n\n  const otherArticles = articleContent.filter(\n    (article) => article.name !== name\n  );\n\n  return (\n    <>\n      <h1>{article.title} </h1>\n      <UpvotesSection\n        articleName={name}\n        upvotes={articleInfo.upvotes}\n        setArticleInfo={setArticleInfo}\n      />\n      {article.content.map((paragraph, key) => (\n        <p className=\"article-page\" key={key}>\n          {\" \"}\n          {paragraph}\n        </p>\n      ))}\n      <CommentsList comments={articleInfo.comments} />\n      <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n      <h3>Other articles:</h3>\n      <ArticlesList articles={otherArticles} />\n    </>\n  );\n};\n\nexport default ArticlePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/articles-list\">Articles</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ArticlesListPage from \"./pages/ArticlesListPage\";\nimport ArticlePage from \"./pages/ArticlePage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport NavBar from \"./NavBar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/articles-list\" component={ArticlesListPage} />\n            <Route path=\"/article/:name\" component={ArticlePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"whatwg-fetch\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}